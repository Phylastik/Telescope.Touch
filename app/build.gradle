apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.google.android.stardroid"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1520
        versionName "1.9.6 - RC3"
        buildConfigField 'String', 'GOOGLE_ANALYTICS_CODE', '""'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            if (project.file('no-checkin.properties').exists()) {
                Properties properties = new Properties()
                // Sky Map devs should create this file with the signing passwords
                properties.load(project.file('no-checkin.properties').newDataInputStream())
                storeFile file("stardroid-release-key.keystore")
                storePassword properties.getProperty('store-pwd')
                keyPassword properties.getProperty('key-pwd')
                keyAlias "stardroid"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            if (file('no-checkin.properties').exists()) {
                signingConfig signingConfigs.release
                Properties properties = new Properties()
                // Sky Map devs should create this file with the Google Analytics key
                properties.load(project.file('no-checkin.properties').newDataInputStream())
                def analyticsKey = properties.getProperty('analytics-key')
                buildConfigField 'String', 'GOOGLE_ANALYTICS_CODE', analyticsKey
            }
        }
    }

    lintOptions {
        // Lint complains because of missing translations.
        // (Missing translations now removed)
        abortOnError false
    }

    // This enables long timeouts required on slow environments, e.g. Travis
    adbOptions {
        timeOutInMs 10 * 60 * 1000  // 10 minutes
        installOptions "-d", "-t"
    }

    flavorDimensions "default"
    productFlavors {
        // includes gms Google services
        gms {
            resValue "string", "analytics_enabled", "true"
        }

        // uses only open source software
        fdroid {
            resValue "string", "analytics_enabled", "false"
        }
    }
}

dependencies {
    implementation project(path: ':datamodel')

// Android support
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'

// Third-party
    implementation 'com.google.guava:guava:19.0'
    implementation 'com.google.dagger:dagger:2.28.3'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.28.3'
    // For annotations not in Android but needed by Dagger
    implementation 'javax.annotation:jsr250-api:1.0'
    // Lite version for Android - it's lighter (obviously) but also doesn't use reflection
    // which can cause no end of problems with minifiers like proguard.
    implementation 'com.google.protobuf:protobuf-javalite:3.13.0'

// Flavor
    gmsImplementation 'com.google.android.gms:play-services-analytics:16.0.8'
    gmsImplementation 'com.google.android.gms:play-services-location:16.0.0'
    gmsImplementation 'com.google.firebase:firebase-analytics:17.5.0'

// Testing
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.easymock:easymock:2.5.2'
    androidTestImplementation 'junit:junit:4.13'
    androidTestImplementation 'org.easymock:easymock:2.5.2'
}
